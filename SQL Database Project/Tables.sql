USE DB_PROJECT2;

CREATE TABLE USERS(
    User_name VARCHAR(30) NOT NULL,
    Last_name VARCHAR(30),
    User_ID VARCHAR(4) NOT NULL,
    Account_type VARCHAR(11),
    Password VARCHAR(16) NOT NULL,
    Bday  DATE,
    Photo VARCHAR(14),
    E_mail VARCHAR(30) NOT NULL UNIQUE,
    Website VARCHAR(30),
    Education VARCHAR(20),
    Address VARCHAR(60),
    Gender VARCHAR(1),
    CHECK(Account_type IN ('ADMIN','CORPORATION','UNIVERSITY','BASIC','EMPLOYEE','STUDENT','TEACHER')),
    PRIMARY KEY(User_ID)
)

CREATE TABLE ORGANIZATION_ACCOUNT(
    Org_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(Org_ID),
    FOREIGN KEY(Org_ID) REFERENCES USERS(User_ID)
)

CREATE TABLE BASIC_ACCOUNT(
    Account_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(Account_ID),
    FOREIGN KEY(Account_ID) REFERENCES USERS(User_ID)
)

CREATE TABLE ADMIN_ACCOUNT(
    Admin_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(Admin_ID),
    FOREIGN KEY(Admin_ID) REFERENCES USERS(User_ID)
)

CREATE TABLE TEACHER_ACCOUNT(
    Teacher_ID VARCHAR(4) NOT NULL,
    Branch VARCHAR(20) NOT NULL,
    PRIMARY KEY(Teacher_ID),
    FOREIGN KEY(Teacher_ID) REFERENCES USERS(User_ID)
)

CREATE TABLE EMPLOYEE_ACCOUNT(
    User_ID VARCHAR(4) NOT NULL UNIQUE,
    Employee_ID VARCHAR(6) NOT NULL,
    Office_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(Employee_ID),
    FOREIGN KEY(User_ID) REFERENCES BASIC_ACCOUNT(Account_ID)
)

CREATE TABLE STUDENT_ACCOUNT(
    Student_ID VARCHAR(4) NOT NULL,
    User_ID VARCHAR(4) NOT NULL UNIQUE,
    GPA DECIMAL(3,2) NOT NULL,
    PRIMARY KEY(Student_ID),
    FOREIGN KEY(User_ID) REFERENCES BASIC_ACCOUNT(Account_ID)
)


CREATE TABLE CONNECTIONS(
    User_ID VARCHAR(4) NOT NULL,
    Friend_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(User_ID,Friend_ID),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Friend_ID) REFERENCES USERS(User_ID),
)

CREATE TABLE FOLLOWS(
    User_ID VARCHAR(4) NOT NULL,
    ID_Followed VARCHAR(4) NOT NULL,
    PRIMARY KEY(User_ID,ID_Followed),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(ID_Followed) REFERENCES USERS(User_ID),
)

CREATE TABLE COURSE(
    Course_ID VARCHAR(4) NOT NULL,
    Course_name VARCHAR(20) NOT NULL,
    Credits VARCHAR(1) NOT NULL,
    PRIMARY KEY(Course_ID)
)

CREATE TABLE TEACHES(
    Teacher_ID VARCHAR(4) NOT NULL,
    Course_ID VARCHAR(4) NOT NULL,
    Semester VARCHAR(6) NOT NULL,
    FOREIGN KEY(Teacher_ID) REFERENCES TEACHER_ACCOUNT(Teacher_ID),
    FOREIGN KEY(Course_ID) REFERENCES COURSE(Course_ID)
)

CREATE TABLE HOMEWORK(
    Homework_ID VARCHAR(6) NOT NULL,
    Course_ID VARCHAR(4) NOT NULL,
    Homework_title VARCHAR(30) NOT NULL,
    PRIMARY KEY(Homework_ID),
    FOREIGN KEY(Course_ID) REFERENCES COURSE(Course_ID)
)

CREATE TABLE WORKS_ON(
    Student_ID VARCHAR(4) NOT NULL,
    Homework_ID VARCHAR(6) NOT NULL,
    Grade INT,
    Semester VARCHAR(6) NOT NULL,
    FOREIGN KEY(Student_ID) REFERENCES STUDENT_ACCOUNT(Student_ID),
    FOREIGN KEY(Homework_ID) REFERENCES HOMEWORK(Homework_ID),
)

CREATE TABLE ENROLLS(
    Student_ID VARCHAR(4) NOT NULL,
    Course_ID VARCHAR(4) NOT NULL,
    Grade INT,
    Semester VARCHAR(6) NOT NULL,
    FOREIGN KEY(Student_ID) REFERENCES STUDENT_ACCOUNT(Student_ID),
    FOREIGN KEY(Course_ID) REFERENCES COURSE(Course_ID),
)

CREATE TABLE OFFERS(
    Org_ID VARCHAR(4) NOT NULL,
    Course_ID VARCHAR(4) NOT NULL,
    FOREIGN KEY(Org_ID) REFERENCES ORGANIZATION_ACCOUNT(Org_ID),
    FOREIGN KEY(Course_ID) REFERENCES COURSE(Course_ID)
)

CREATE TABLE OFFICE(
    Office_ID VARCHAR(4) NOT NULL,
    Office_name VARCHAR(30) NOT NULL UNIQUE,
    Org_ID VARCHAR(4) NOT NULL,
    Address VARCHAR(60),
    E_mail VARCHAR(30) NOT NULL UNIQUE,
    PRIMARY KEY(Office_ID),
    FOREIGN KEY(Org_ID) REFERENCES ORGANIZATION_ACCOUNT(Org_ID)
)

CREATE TABLE PROJECT(
    Project_ID  VARCHAR(6) NOT NULL,
    Project_name VARCHAR(30) NOT NULL UNIQUE,
    PRIMARY KEY(Project_ID)
)

CREATE TABLE CONTROLS(
    Office_ID VARCHAR(4) NOT NULL,
    Project_ID  VARCHAR(6) NOT NULL,
    FOREIGN KEY(Office_ID) REFERENCES OFFICE(Office_ID),
    FOREIGN KEY(Project_ID) REFERENCES PROJECT(Project_ID)
)

CREATE TABLE EXPERIENCE(
    Exp_ID VARCHAR(4) NOT NULL,
    StartDate DATE,
    EndDate DATE,
    Position VARCHAR(20) NOT NULL,
    PRIMARY KEY(Exp_ID)
)

CREATE TABLE HAS_EXPERIENCE(
    User_ID VARCHAR(4) NOT NULL,
    Exp_ID VARCHAR(4) NOT NULL,
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Exp_ID) REFERENCES EXPERIENCE(Exp_ID),
)

CREATE TABLE EXP_LOCATION(
    Exp_ID VARCHAR(4) NOT NULL,
    Org_ID VARCHAR(4) NOT NULL,
    FOREIGN KEY(Exp_ID) REFERENCES EXPERIENCE(Exp_ID),
    FOREIGN KEY(Org_ID) REFERENCES ORGANIZATION_ACCOUNT(Org_ID),
)

CREATE TABLE PUBLIC_COURSE(
    Course_ID VARCHAR(4) NOT NULL,
    Course_name VARCHAR(50) NOT NULL,
    Location VARCHAR(20) NOT NULL,
    StartDate DATE,
    EndDate DATE,
    PRIMARY KEY(Course_ID)
)

CREATE TABLE ATTENDS(
    User_ID VARCHAR(4) NOT NULL,
    Course_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(User_ID,Course_ID),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Course_ID) REFERENCES PUBLIC_COURSE(Course_ID),
)

CREATE TABLE TAG(
    Tag_ID VARCHAR(4),
    Tag_Name VARCHAR(20) NOT NULL,
    Followers INT,
    PRIMARY KEY(Tag_ID)
)

CREATE TABLE FOLLOWS_TAG(
    User_ID VARCHAR(4) NOT NULL,
    Tag_ID VARCHAR(4) NOT NULL,
    Start_Date DATE,
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Tag_ID) REFERENCES TAG(Tag_ID)
)

CREATE TABLE POST(
    User_ID VARCHAR(4) NOT NULL,
    Post_ID VARCHAR(4),
    Post_Text VARCHAR(100),
    Post_Image VARCHAR(14),
    Post_Date DATE NOT NULL,
    Like_Amount INT,
    CHECK(Post_Text IS NOT NULL OR Post_Image IS NOT NULL),
    PRIMARY KEY(Post_ID),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
)

CREATE TABLE BELONGS_TO(
    Post_ID VARCHAR(4) NOT NULL,
    Tag_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(Post_ID,Tag_ID),
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID),
    FOREIGN KEY(Tag_ID) REFERENCES TAG(Tag_ID)
)

CREATE TABLE COMMENT(
    Comment_ID VARCHAR(4),
    Post_ID VARCHAR(4) NOT NULL,
    Text VARCHAR(100),
    Date DATE,
    Like_Amount INT,
    PRIMARY KEY(Comment_ID),
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID)
)

CREATE TABLE COMMENTS(
    User_ID VARCHAR(4) NOT NULL,
    Comment_ID VARCHAR(4) NOT NULL,
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Comment_ID) REFERENCES COMMENT(Comment_ID)
)

CREATE TABLE LIKES_COMMENT(
    User_ID VARCHAR(4) NOT NULL,
    Comment_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(User_ID,Comment_ID),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Comment_ID) REFERENCES COMMENT(Comment_ID)
)

CREATE TABLE LIKES_POST(
    User_ID VARCHAR(4) NOT NULL,
    Post_ID VARCHAR(4) NOT NULL,
    PRIMARY KEY(User_ID,Post_ID),
    FOREIGN KEY(User_ID) REFERENCES USERS(User_ID),
    FOREIGN KEY(Post_ID) REFERENCES POST(Post_ID)
)